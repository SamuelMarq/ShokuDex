@using Recodme.ShokuDex.WebApi.Models.FoodInfo
@model List<MealViewModel>

@{
    var foodList = (List<FoodViewModel>)ViewBag.Foods;
}

<h2> @ViewBag.Day.ToString("dd/MM/yyyy") - @ViewBag.TimeOfDay.Name</h2>

<hr />

<div class="table-responsive">
    <table class="table" id="listTable">
        <thead>
            <tr>
                <th>Name</th>
                <th>Portion (g)</th>
                <th>Fats (g)</th>
                <th>Carbohydrates (g)</th>
                <th>Protein (g)</th>
                <th>Alcohol (g)</th>
                <th>Calories (kcal)</th>
                <th class="no-sort"></th>
            </tr>
        </thead>
        <tbody>

            @{
                var mealIds = Model.Where(meal => meal.Day == ViewBag.Day && meal.TimeOfDayId == ViewBag.TimeOfDay.Id).ToList();
            }
            @foreach (var item in Model)
            {

                var food = foodList.FirstOrDefault(food => item.FoodId == food.Id);

                <tr>

                    <td>@food.Name</td>
                    <td>@item.Portion</td>
                    <td>@food.Fats</td>
                    <td>@food.Carbohydrates</td>
                    <td>@food.Protein</td>
                    <td>@food.Alcohol</td>
                    <td>@food.Calories</td>
                    <td class="no-sort"></td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                @{
                    var foods = foodList.Where(f => mealIds.Select(y => y.FoodId).ToList().Contains(f.Id));
                }
                <td>Total</td>

                <td>
                    @{
                        var sumPort = 0.0;


                        sumPort += mealIds.Sum(x => x.Portion);
                    }
                    @Math.Round(sumPort, 2) 
                </td>
                <td>
                    @{
                        var sumFats = 0.0;
                        foreach (var prod in foods)
                        {
                            sumFats += mealIds.Where(x => x.FoodId == prod.Id).Sum(x => x.Portion) * prod.Fats / 100;
                        }
                    }
                    @Math.Round(sumFats, 2) 
                </td>
                <td>
                    @{
                        var sumCar = 0.0;
                        foreach (var prod in foods)
                        {
                            sumCar += mealIds.Where(x => x.FoodId == prod.Id).Sum(x => x.Portion) * prod.Carbohydrates / 100;
                        }
                    }
                    @Math.Round(sumCar, 2) 
                </td>
                <td>
                    @{
                        var sumPro = 0.0;
                        foreach (var prod in foods)
                        {
                            sumPro += mealIds.Where(x => x.FoodId == prod.Id).Sum(x => x.Portion) * prod.Protein / 100;
                        }
                    }
                    @Math.Round(sumPro, 2) 
                </td>
                <td>
                    @{
                        var sumAlc = 0.0;
                        foreach (var prod in foods)
                        {
                            sumAlc += mealIds.Where(x => x.FoodId == prod.Id).Sum(x => x.Portion) * prod.Alcohol / 100;
                        }
                    }
                    @Math.Round(sumAlc, 2) 
                </td>
                <td>
                    @{
                        var sumCal = 0.0;
                        foreach (var prod in foods)
                        {
                            sumCal += mealIds.Where(x => x.FoodId == prod.Id).Sum(x => x.Portion) * prod.Calories / 100;
                        }
                    }
                    @Math.Round(sumCal, 2) 
                </td>
                <td></td>

            </tr>
        </tfoot>
    </table>
</div>
<a asp-action="Index" asp-controller="FoodDiary" class="btn btn-danger">Back</a>

<script>
    $(document).ready(function () {
        $('#listTable').DataTable({
            "order": [],
            "columnDefs": [{
                "targets": 'no-sort',
                "orderable": false,
            }]
        });
    });
</script>